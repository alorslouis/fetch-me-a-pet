---
import { Image } from "astro:assets";
import { type DogWithFavorite, type DogColumns } from "@typedef/apiTypes";
import FavoriteButton from "./FavoriteButton.astro";

interface Props {
	dog: DogWithFavorite;
	entranceDelay?: number;
	index?: number;
}

const { dog } = Astro.props;

if (!dog) throw new Error(`failed fetching dog`);

const { img, id, isFavorite, ...dogObject } = dog;

const dogIdUrl = new URL(Astro.url);

dogIdUrl.pathname = `/dogs/${dog.id}`;

const breedUrl = new URL(Astro.url);
breedUrl.pathname = `/dogs/breeds/${dog.breed}`;

const tdFormatter = (column: DogColumns) => {
	if (column === "breed") {
		return "italic text-sm";
	} else if (column === "name") {
		return "font-black ";
	} else if (column === "age") {
		return "after:content-['y.o.'] after:text-xs after:italic after:font-thin";
	}
};

const linkFormatter = (column: DogColumns) => {
	if (column === "breed") {
		return breedUrl.pathname;
	}

	return dogIdUrl.pathname;
};
---

<tr
	class={[
		"py-2 group-hover:opacity-60 hover:!opacity-100 h-24 transition-opacity  animate-fadeIn rounded-lg",
	].join(" ")}
>
	<td class="m-4 h-24">
		<a href={dogIdUrl.pathname} class="rounded-lg">
			<Image
				src={img}
				alt={`picture of ${dogObject.name}, a ${dogObject.breed}`}
				inferSize
				class="rounded-lg object-cover ml-auto size-24"
			/>
		</a>
	</td>
	{
		Object.entries(dogObject).map(([key, dogObjectVal]) => (
			<td
				class={[
					"text-center ",
					`${tdFormatter(key as DogColumns)}`,
				].join(" ")}
			>
				<a
					class="text-center break-words text-xs md:text-base"
					href={linkFormatter(key as DogColumns)}
				>
					{dogObjectVal}
				</a>
			</td>
		))
	}
	<td class="text-center">
		<FavoriteButton dog={dog} favoritePartialMethod="tableRow" />
	</td>
</tr>
